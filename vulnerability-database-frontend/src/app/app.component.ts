import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';
import { RouterLink, RouterLinkActive, RouterOutlet, Router } from '@angular/router';
import {BreakpointObserver, Breakpoints} from '@angular/cdk/layout';
import {MatMenuModule} from '@angular/material/menu';
import {MatButtonModule} from '@angular/material/button';
import {MatTooltipModule} from '@angular/material/tooltip';
import { MatIconModule } from '@angular/material/icon';
import { CommonModule } from '@angular/common';
import { ApiService } from './api.service';
import { SearchService } from './search.service';

@Component({
  selector: 'app-root',
  standalone: true,
  imports: [ RouterOutlet, RouterLink, RouterLinkActive, MatButtonModule, MatMenuModule, CommonModule, MatTooltipModule, MatIconModule ],
  templateUrl: './app.component.html',
  styleUrl: './app.component.css'
})
export class AppComponent implements OnInit{
  isHandsetPortrait: boolean;
  @ViewChild('searchInput') searchInput!: ElementRef;

  constructor(
    private observer: BreakpointObserver, 
    private apiService: ApiService, 
    private router: Router,
    private searchService: SearchService ){}

  ngOnInit(): void {
    this.isHandsetPortrait = this.observer.isMatched(Breakpoints.HandsetPortrait);
    this.observer.observe([Breakpoints.HandsetPortrait]).subscribe(result => {
      this.isHandsetPortrait = result.matches;
    });

  }

   onSearchSubmit(event: Event): void {
    event.preventDefault(); // Prevents the default form submission behavior

    this.searchService.onSearchSubmit(this.searchInput.nativeElement.value);
  }
}
 
